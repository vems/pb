// Code generated by protoc-gen-go.
// source: todo.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	todo.proto

It has these top-level messages:
	TodoRequest
	TodoResponse
	TodosReply
	AllRequest
	CreateRequest
	FindRequest
	UpdateRequest
	DeleteAllRequest
	DeleteAllResponse
	DeleteRequest
	DeleteResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TodoRequest struct {
	Title     string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Completed bool   `protobuf:"varint,2,opt,name=completed" json:"completed,omitempty"`
	Order     int64  `protobuf:"varint,3,opt,name=order" json:"order,omitempty"`
	Text      string `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
}

func (m *TodoRequest) Reset()                    { *m = TodoRequest{} }
func (m *TodoRequest) String() string            { return proto.CompactTextString(m) }
func (*TodoRequest) ProtoMessage()               {}
func (*TodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TodoResponse struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Url       string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Completed bool   `protobuf:"varint,4,opt,name=completed" json:"completed,omitempty"`
	Order     int64  `protobuf:"varint,5,opt,name=order" json:"order,omitempty"`
	Text      string `protobuf:"bytes,6,opt,name=text" json:"text,omitempty"`
}

func (m *TodoResponse) Reset()                    { *m = TodoResponse{} }
func (m *TodoResponse) String() string            { return proto.CompactTextString(m) }
func (*TodoResponse) ProtoMessage()               {}
func (*TodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type TodosReply struct {
	Todos []*TodoResponse `protobuf:"bytes,1,rep,name=todos" json:"todos,omitempty"`
}

func (m *TodosReply) Reset()                    { *m = TodosReply{} }
func (m *TodosReply) String() string            { return proto.CompactTextString(m) }
func (*TodosReply) ProtoMessage()               {}
func (*TodosReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TodosReply) GetTodos() []*TodoResponse {
	if m != nil {
		return m.Todos
	}
	return nil
}

type AllRequest struct {
}

func (m *AllRequest) Reset()                    { *m = AllRequest{} }
func (m *AllRequest) String() string            { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()               {}
func (*AllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CreateRequest struct {
	Todo *TodoRequest `protobuf:"bytes,1,opt,name=todo" json:"todo,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateRequest) GetTodo() *TodoRequest {
	if m != nil {
		return m.Todo
	}
	return nil
}

type FindRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *FindRequest) Reset()                    { *m = FindRequest{} }
func (m *FindRequest) String() string            { return proto.CompactTextString(m) }
func (*FindRequest) ProtoMessage()               {}
func (*FindRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type UpdateRequest struct {
	Id   int64        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Todo *TodoRequest `protobuf:"bytes,2,opt,name=todo" json:"todo,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateRequest) GetTodo() *TodoRequest {
	if m != nil {
		return m.Todo
	}
	return nil
}

type DeleteAllRequest struct {
}

func (m *DeleteAllRequest) Reset()                    { *m = DeleteAllRequest{} }
func (m *DeleteAllRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAllRequest) ProtoMessage()               {}
func (*DeleteAllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type DeleteAllResponse struct {
}

func (m *DeleteAllResponse) Reset()                    { *m = DeleteAllResponse{} }
func (m *DeleteAllResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAllResponse) ProtoMessage()               {}
func (*DeleteAllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DeleteRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type DeleteResponse struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*TodoRequest)(nil), "pb.TodoRequest")
	proto.RegisterType((*TodoResponse)(nil), "pb.TodoResponse")
	proto.RegisterType((*TodosReply)(nil), "pb.TodosReply")
	proto.RegisterType((*AllRequest)(nil), "pb.AllRequest")
	proto.RegisterType((*CreateRequest)(nil), "pb.CreateRequest")
	proto.RegisterType((*FindRequest)(nil), "pb.FindRequest")
	proto.RegisterType((*UpdateRequest)(nil), "pb.UpdateRequest")
	proto.RegisterType((*DeleteAllRequest)(nil), "pb.DeleteAllRequest")
	proto.RegisterType((*DeleteAllResponse)(nil), "pb.DeleteAllResponse")
	proto.RegisterType((*DeleteRequest)(nil), "pb.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "pb.DeleteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Todo service

type TodoClient interface {
	All(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (*TodosReply, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*TodoResponse, error)
	Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (*TodoResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*TodoResponse, error)
	DeleteAll(ctx context.Context, in *DeleteAllRequest, opts ...grpc.CallOption) (*DeleteAllResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type todoClient struct {
	cc *grpc.ClientConn
}

func NewTodoClient(cc *grpc.ClientConn) TodoClient {
	return &todoClient{cc}
}

func (c *todoClient) All(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (*TodosReply, error) {
	out := new(TodosReply)
	err := grpc.Invoke(ctx, "/pb.Todo/All", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := grpc.Invoke(ctx, "/pb.Todo/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := grpc.Invoke(ctx, "/pb.Todo/Find", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := grpc.Invoke(ctx, "/pb.Todo/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) DeleteAll(ctx context.Context, in *DeleteAllRequest, opts ...grpc.CallOption) (*DeleteAllResponse, error) {
	out := new(DeleteAllResponse)
	err := grpc.Invoke(ctx, "/pb.Todo/DeleteAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := grpc.Invoke(ctx, "/pb.Todo/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Todo service

type TodoServer interface {
	All(context.Context, *AllRequest) (*TodosReply, error)
	Create(context.Context, *CreateRequest) (*TodoResponse, error)
	Find(context.Context, *FindRequest) (*TodoResponse, error)
	Update(context.Context, *UpdateRequest) (*TodoResponse, error)
	DeleteAll(context.Context, *DeleteAllRequest) (*DeleteAllResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
}

func RegisterTodoServer(s *grpc.Server, srv TodoServer) {
	s.RegisterService(&_Todo_serviceDesc, srv)
}

func _Todo_All_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).All(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Todo/All",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).All(ctx, req.(*AllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Todo/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Todo/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).Find(ctx, req.(*FindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Todo/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_DeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).DeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Todo/DeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).DeleteAll(ctx, req.(*DeleteAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Todo/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Todo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Todo",
	HandlerType: (*TodoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "All",
			Handler:    _Todo_All_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Todo_Create_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _Todo_Find_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Todo_Update_Handler,
		},
		{
			MethodName: "DeleteAll",
			Handler:    _Todo_DeleteAll_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Todo_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("todo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x93, 0x5b, 0x8e, 0xd3, 0x30,
	0x14, 0x86, 0x27, 0x57, 0x91, 0x93, 0x69, 0xe8, 0x1c, 0x8a, 0x14, 0x45, 0x20, 0x22, 0x23, 0x0d,
	0x91, 0x90, 0x3a, 0xa2, 0xcc, 0x13, 0x6f, 0x23, 0x2a, 0x16, 0x60, 0xc1, 0x02, 0x28, 0xf6, 0x43,
	0x84, 0xa9, 0x83, 0xe3, 0x4a, 0xb0, 0x09, 0x76, 0xc2, 0x1e, 0x91, 0xed, 0xa6, 0x71, 0x42, 0x3b,
	0x6f, 0xf6, 0xb9, 0xfd, 0xff, 0xf9, 0x9c, 0x00, 0x68, 0xc9, 0xe4, 0xba, 0x53, 0x52, 0x4b, 0x0c,
	0xbb, 0x1d, 0xf9, 0x0e, 0xf9, 0x67, 0xc9, 0x24, 0xe5, 0x3f, 0x0f, 0xbc, 0xd7, 0xb8, 0x82, 0x44,
	0xb7, 0x5a, 0xf0, 0x32, 0xa8, 0x83, 0x26, 0xa3, 0xee, 0x82, 0x2f, 0x20, 0xfb, 0x26, 0x7f, 0x74,
	0x82, 0x6b, 0xce, 0xca, 0xb0, 0x0e, 0x9a, 0x27, 0x74, 0x0c, 0x98, 0x1e, 0xa9, 0x18, 0x57, 0x65,
	0x54, 0x07, 0x4d, 0x44, 0xdd, 0x05, 0x11, 0x62, 0xcd, 0x7f, 0xe9, 0x32, 0xb6, 0x83, 0xec, 0x99,
	0xfc, 0x09, 0xe0, 0xda, 0xa9, 0xf5, 0x9d, 0xdc, 0xf7, 0x1c, 0x0b, 0x08, 0x5b, 0x66, 0xb5, 0x22,
	0x1a, 0xb6, 0x6c, 0x94, 0x0f, 0x7d, 0xf9, 0x25, 0x44, 0x07, 0x25, 0xec, 0xf8, 0x8c, 0x9a, 0xe3,
	0xd4, 0x50, 0x7c, 0xd1, 0x50, 0x72, 0xce, 0x50, 0xea, 0x19, 0xba, 0x07, 0x30, 0x7e, 0x7a, 0xca,
	0x3b, 0xf1, 0x1b, 0x6f, 0x21, 0x31, 0x74, 0xfa, 0x32, 0xa8, 0xa3, 0x26, 0xdf, 0x2c, 0xd7, 0xdd,
	0x6e, 0xed, 0xdb, 0xa5, 0x2e, 0x4d, 0xae, 0x01, 0x1e, 0x84, 0x38, 0x22, 0x23, 0xf7, 0xb0, 0xf8,
	0xa8, 0xf8, 0x57, 0xcd, 0x07, 0x86, 0xaf, 0x21, 0x36, 0x75, 0x76, 0xad, 0x7c, 0xf3, 0x74, 0x9c,
	0x62, 0xd3, 0xd4, 0x26, 0xc9, 0x4b, 0xc8, 0x3f, 0xb5, 0x7b, 0x36, 0xf4, 0xcc, 0x40, 0x90, 0x2d,
	0x2c, 0xbe, 0x74, 0xcc, 0x1b, 0x3a, 0x27, 0x35, 0x88, 0x84, 0x8f, 0x89, 0x20, 0x2c, 0xb7, 0xdc,
	0x30, 0xf1, 0xec, 0x3e, 0x83, 0x1b, 0x2f, 0xe6, 0x16, 0x23, 0xaf, 0x60, 0xe1, 0x82, 0x97, 0xfc,
	0xdc, 0x42, 0x31, 0x14, 0x1c, 0x9f, 0x6e, 0x05, 0x09, 0x57, 0x4a, 0xaa, 0xe1, 0x4b, 0xb1, 0x97,
	0xcd, 0xdf, 0x10, 0x62, 0xe3, 0x03, 0xdf, 0x40, 0xf4, 0x20, 0x04, 0x16, 0xc6, 0xd8, 0xa8, 0x5e,
	0x15, 0x83, 0x51, 0x87, 0x9c, 0x5c, 0xe1, 0x1d, 0xa4, 0x0e, 0x1f, 0xde, 0x98, 0xdc, 0x04, 0x65,
	0xf5, 0xdf, 0x13, 0x90, 0x2b, 0x7c, 0x0b, 0xb1, 0x21, 0x87, 0x76, 0x67, 0x8f, 0xe1, 0xd9, 0xe2,
	0x3b, 0x48, 0x1d, 0x47, 0x37, 0x7d, 0xc2, 0xf4, 0x6c, 0xc3, 0x07, 0xc8, 0x4e, 0x78, 0x70, 0x65,
	0x0a, 0xe6, 0x04, 0xab, 0xe7, 0xb3, 0xe8, 0xa9, 0xf7, 0x1d, 0xa4, 0x2e, 0xec, 0xc4, 0x26, 0x44,
	0x2b, 0xf4, 0x43, 0x43, 0xcb, 0x2e, 0xb5, 0x7f, 0xe2, 0xfb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x75, 0x6c, 0x66, 0xf6, 0x97, 0x03, 0x00, 0x00,
}
